version: 2.0
jobs:
  build:
    docker:
      - image: circleci/golang:1.12-node
    working_directory: /go/src/github.com/chetanyakan/mattermost-plugin-circleci
    steps:
      - checkout
      - restore_cache:
          name: Restore Golang dependencies cache
          key: dependency-cache-{{ checksum "./server/glide.lock" }}
      - restore_cache:
          name: Restore NPM dependencies cache
          key: dependency-cache-{{ checksum "./webapp/package-lock.json" }}
      - type: shell
        name: 'Build artifacts'
        command: make dist
        environment:
            TERM: dumb
      - save_cache:
          name: Save Golang dependencies cache
          key: dependency-cache-{{ checksum "./server/glide.lock" }}
          paths:
              - ./server/vendor
      - save_cache:
          name: Save NPM dependencies cache
          key: dependency-cache-{{ checksum "./webapp/package-lock.json" }}
          paths:
              - ./webapp/node_modules
      - store_artifacts:
          path: ./dist
          destination: build
      - persist_to_workspace:
          root: .
          paths:
            - dist
      - run:
          name: Notification Fail
          when: on_fail
          command: >
            curl --header "Content-Type: application/json"
            --request POST
            --data "{\"channel_id\":\"$CHANNEL_ID\",\"status\":\"failure\",\"build_num\":\"$CIRCLE_BUILD_NUM\",\"repo_name\":\"$CIRCLE_PROJECT_REPONAME\",\"tag\":\"$CIRCLE_TAG\",\"commit\":\"$CIRCLE_SHA1\",\"build_url\":\"$CIRCLE_BUILD_URL\",\"org_name\":\"$CIRCLE_PROJECT_USERNAME\",\"branch\":\"$CIRCLE_BRANCH\",\"username\":\"$CIRCLE_USERNAME\",\"pull_request\":\"$CIRCLE_PULL_REQUEST\",\"job\":\"$CIRCLE_JOB\",\"workflow_id\":\"$CIRCLE_WORKFLOW_ID\",\"compare_url\":\"$CIRCLE_COMPARE_URL\"}"
            $WEBHOOK_URL
      - run:
          name: Notification Success
          when: on_success
          command: >
            curl --header "Content-Type: application/json"
            --request POST
            --data "{\"channel_id\":\"$CHANNEL_ID\",\"status\":\"success\",\"build_num\":\"$CIRCLE_BUILD_NUM\",\"repo_name\":\"$CIRCLE_PROJECT_REPONAME\",\"tag\":\"$CIRCLE_TAG\",\"commit\":\"$CIRCLE_SHA1\",\"build_url\":\"$CIRCLE_BUILD_URL\",\"org_name\":\"$CIRCLE_PROJECT_USERNAME\",\"branch\":\"$CIRCLE_BRANCH\",\"username\":\"$CIRCLE_USERNAME\",\"pull_request\":\"$CIRCLE_PULL_REQUEST\",\"job\":\"$CIRCLE_JOB\",\"workflow_id\":\"$CIRCLE_WORKFLOW_ID\",\"compare_url\":\"$CIRCLE_COMPARE_URL\"}"
            $WEBHOOK_URL

  release:
    docker:
      - image: cibuilds/github:0.12
    working_directory: /go/src/github.com/chetanyakan/mattermost-plugin-circleci
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} dist/

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
  build-and-release:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
